<div class="container" x-data="crudProjects()" x-init="init">
    <div x-show="showModalProject" x-cloak>
        <?= component('projects.modal-create') ?>
    </div>
    <div class="header-content">
        <div>
            <h2 class="title-web">
                <?= $title ?>
            </h2>
        </div>
        <div>
            <button @click="showModalProject = true" class="btn btn-icon-only btn-opacity" data-modal="modal">
                <span class="material-symbols-outlined">
                    add
                </span>
            </button>
            <button id="btn-grid" class="btn btn-icon-only btn-opacity">
                <span class="material-symbols-outlined">
                    grid_view
                </span>
            </button>
            <button id="btn-list" class="btn btn-icon-only btn-opacity">
                <span class="material-symbols-outlined">
                    list
                </span>
            </button>
        </div>
    </div>
    

    <div id="table">
        <table class="table">
            <thead>
                <tr>
                    <th class="td-name">Name</th>
                    <th class="td-description">Description</th>
                    <th class="td-date">Start Date</th>
                    <th class="td-date">End Date</th>
                    <th class="td-status">Status</th>
                    <th>Progress</th>
                    <th>Priority</th>
                    <th>Budget</th>
                    <th>Estimated Time</th>
                    <th></th>

                <tr>
            </thead>
            <tbody>
                <template x-for="project in projects" :key="project.id">
                    <tr x-tex="project.name">

                    </tr>
                </template>
                <template>
                    <tr class="">
                        <td>
                            <?= $project->name ?>
                        </td>
                        <td class="td-description">
                            <?= $project->description ?>
                        </td>
                        <td class="td-date">
                            <?= $project->start_date ?>
                        </td>
                        <td class="td-date">
                            <?= $project->end_date ?>
                        </td>
                        <td><span class="status-box status-success">
                                <?= $project->status ?>
                            </span></td>
                        <td>

                            <div class="w-full  rounded-full dark:bg-gray-400">
                                <div class="bg-green-600 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full"
                                    style="width: 45%"> 45%</div>
                            </div>

                        </td>
                        <td>
                            <?= $project->priority ?>
                        </td>
                        <td>
                            <?= $project->budget ?>
                        </td>
                        <td>
                            <?= $project->estimated_time . ' HRS' ?>
                        </td>
                        <td class="btn-group">
                            <a class=" btn btn-success btn-icon-only" href="<?= route('projects/' . $project->slug) ?>">
                                <span class="material-symbols-outlined">
                                    visibility
                                </span>
                            </a>
                            <button class=" btn btn-icon-only">
                                <span class="material-symbols-outlined"
                                    @click="showModalProject = true; id_project=<?= $project->id ?>; edit=true">
                                    edit
                                </span>
                            </button>
                            <button class="btn btn-danger btn-icon-only"
                                @click="showConfirm = true; id_project=<?= $project->id ?>">
                                <span class="material-symbols-outlined">
                                    delete
                                </span>
                            </button>
                        </td>
                    </tr>
                </template>

            </tbody>
        </table>

        <div x-show="showConfirm" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
            <div class="bg-white p-4 rounded shadow">
                <p class="mb-4">Â¿Deseas eliminar este elemento?</p>
                <div class="flex justify-end">
                    <button @click="showConfirm = false" class="text-gray-600 mr-2">Cancelar</button>
                    <button @click="showConfirm = false" x-on:click="deleteProject(project)"
                        class="bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded">
                        Confirmar
                    </button>
                </div>
            </div>
        </div>
    </div>


    <script>
        const url = '<?= HTTP_HOST . "/api/projects" ?>';
        const token = '<?= token() ?>';
        const user_id = '<?= user_id() ?>';
        function crudProjects() {
            return {
                id: 0,
                name: '',
                description: '',
                start_date: '',
                end_date: '',
                priority: 'low',
                budget: 0,
                estimated_time: 0,
                validation: null,
                edit: false,

                showConfirm: false,
                showModalProject: false,
                id_project: 0,

                projects: [],

                init: function () {
                    console.log('Inicio')
                    this.fetchProjects();
                },
                fetchProjects: function () {
                    const header = {
                        headers: {
                            'Content-type': 'application/json',
                            Authorization: `Bearer ${token}`
                        },
                        method: "GET",
                    };

                    fetch(url, header)
                        .then(data => data.json())
                        .then((response) => {
                           
                            if (response.status == "200") {
                                this.projects = response.data
                                console.log(this.projects.originalTarget);
                            } else if (response.status == "400") {

                            } else {
                                toastr.error(response.message, "Error");
                            }
                        })
                        .catch(responseError => console.log(responseError))
                },
                addProject: function () {
                    if (!this.edit) {
                        var dataForm = {
                            user_id: user_id,
                            name: this.name,
                            description: this.description,
                            start_date: this.start_date,
                            end_date: this.end_date,
                            priority: this.priority,
                            budget: this.budget,
                            estimated_time: this.estimated_time
                        }
                        this.crud(url, "POST", dataForm, "Project created successfully")
                    } else {

                    }
                    setTimeout(() => {
                        Turbolinks.visit(window.location, { action: 'replace' });
                    }, 1000);
                },
                deleteProject: function () {
                    this.crud(url + '/' + this.id_project, "DELETE", null, "Project deleted successfully")
                    setTimeout(() => {
                        Turbolinks.visit(window.location, { action: 'replace' });
                    }, 1000);
                },
                crud: function (url, method = "POST", dataForm, message = "OK") {
                    var header = {
                        headers: {
                            'Content-type': 'application/json',
                            Authorization: `Bearer ${token}`
                        },
                        method: method,
                        body: JSON.stringify(dataForm)
                    };
                    fetch(url, header)
                        .then(data => data.json())
                        .then((response) => {
                            console.log(response);
                            if (response.status == "200") {
                                toastr.success(message);
                                this.resetData();
                            } else if (response.status == "400") {
                                console.log(response.message);
                                this.validation = null;
                                this.validation = response.message
                            } else {
                                toastr.error(response.message, "Error");
                            }
                        })
                        .catch(responseError => console.log(responseError))
                },
                resetData: function () {
                    this.name = '';
                    this.description = '';
                    this.start_date = '';
                    this.end_date = '';
                    this.priority = 'low';
                    this.budget = 0;
                    this.estimated_time = 0;
                    this.validation = null;
                    this.showModalProject = false;
                    this.edit = false;
                }
            }
        }

    </script>




    <div class="pagination">
        <?php
        $totalPages = ceil($totalProjects / $projectsPerPage);

        $currentPage = isset($_GET['page']) ? intval($_GET['page']) : 1;

        $numLinksToShow = 5; // NÃºmero de enlaces a mostrar en cada extremo
        
        echo '<a href="?page=1">First</a>';

        // Mostrar botÃ³n para la pÃ¡gina anterior si no estamos en la primera pÃ¡gina
        if ($currentPage > 1) {
            echo '<a href="?page=' . ($currentPage - 1) . '">Previous</a>';
        }

        // Mostrar enlaces de las pÃ¡ginas siguientes
        for ($i = $currentPage + 1; $i <= min($currentPage + $numLinksToShow, $totalPages); $i++) {
            echo '<a href="?page=' . $i . '">' . $i . '</a>';
        }

        // Si hay mÃ¡s de $numLinksToShow pÃ¡ginas despuÃ©s de la pÃ¡gina actual, mostrar puntos suspensivos
        if ($totalPages > $currentPage + $numLinksToShow) {
            echo '<span>...</span>';
        }

        // Mostrar botÃ³n para la pÃ¡gina siguiente si no estamos en la Ãºltima pÃ¡gina
        if ($currentPage < $totalPages) {
            echo '<a href="?page=' . ($currentPage + 1) . '">Next</a>';
        }

        echo '<a href="?page=' . $totalPages . '">Last</a>';
        ?>
    </div>
</div>

<style>
    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .pagination a {
        padding: 5px 10px;
        margin: 0 5px;
        border: 1px solid #ccc;
        text-decoration: none;
    }

    .pagination .active {
        background-color: #007bff;
        color: white;
        border: 1px solid #007bff;
    }
</style>



<div id="grid" class="grid">
<?php foreach ($projects as $project) { ?>
    <a class="card glass" href="<?= route('projects/' . $project->slug) ?>">
        <div class="card-header">
            <h2>
                <?= $project->name ?>
            </h2>
            <p class="description">
                <?= $project->description ?>
            </p>
        </div>
        <div class="card-body">
            <div class="status">
                <p><strong>Status:</strong> <span class="status-badge in-progress">
                        <?= $project->status ?>
                    </span></p>
            </div>
            <div class="progress-container">
                <div class="progress-bar" style="<?= "width: $project->progress %;" ?>">
                    <span class="progress-label">
                        <?= $project->progress ?>
                    </span>
                </div>
            </div>
            <div class="end-date">
                <p><strong>End Date:</strong>
                    <?= $project->end_date ?>
                </p>
            </div>
        </div>
    </a>
<?php } ?>
<!-- <div class="card glass">
    <div class="card-header">
        <h2>Project Name</h2>
        <p class="description">Project Description Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
    </div>
    <div class="card-body">
        <div class="status">
            <p><strong>Status:</strong> <span class="status-badge in-progress">In Progress</span></p>
        </div>
        <div class="progress-container">
            <div class="progress-bar" style="width: 75%;">
                <span class="progress-label">75%</span>
            </div>
        </div>
        <div class="end-date">
            <p><strong>End Date:</strong> 2023-12-31</p>
        </div>
    </div>
</div> -->


</div>
