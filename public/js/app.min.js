document.addEventListener('alpine:init',()=>{Alpine.store('ENV',{token:(localStorage.getItem("token"))?localStorage.getItem("token"):'',URL:'http://192.168.3.2:8000/api',setToken(token){this.token=token;localStorage.setItem('token',token)}})
Alpine.store('Toast',{show(type='success',message='OK'){toastr.options={"closeButton":!0,"debug":!1,"newestOnTop":!1,"progressBar":!1,"positionClass":"toast-top-right","preventDuplicates":!1,"onclick":null,"showDuration":"300","hideDuration":"1000","timeOut":"5000","extendedTimeOut":"1000","showEasing":"swing","hideEasing":"linear","showMethod":"fadeIn","hideMethod":"fadeOut"}
switch(type){case "error":toastr.error(message,"Error");break;case "success":toastr.success(message,"Success");break;case "warning":toastr.warning(message,"Warning");break;default:toastr.error(message,"Error");break}}});Alpine.store('DisplayMode',{mode:(localStorage.getItem("DisplayMode"))?localStorage.getItem("DisplayMode"):'table',setMode(mode){this.mode=mode;localStorage.setItem("DisplayMode",mode)}})
Alpine.store('ProjectStore',{projects:[],tasks:[],})
Alpine.store('TaskStore',{tasks:[],})});document.addEventListener('alpine:init',()=>{Alpine.data('Auth',()=>({url:Alpine.store('ENV').URL+'/auth',urlRegister:Alpine.store('ENV').URL+'/auth/signin',data:{email:'',password:'',},dataRegister:{username:'',email:'',password:'',confirm_password:''},validation:[],showSingIn:!0,showSingUp:!1,init(){console.log(this.url)},login(){var header={headers:{'Content-type':'application/json',},method:'POST',body:JSON.stringify(this.data)};fetch(this.url,header).then(data=>{return data.json()}).then((response)=>{if(response.status==400){Alpine.store('Toast').show('error',response.message)}
if(response.status==200){Alpine.store('ENV').setToken(response.data.token);Turbolinks.visit("/",{action:"replace"})}}).catch((error)=>console.log(error))},register(){var header={headers:{'Content-type':'application/json',},method:'POST',body:JSON.stringify(this.dataRegister)};fetch(this.urlRegister,header).then(data=>{return data.json()}).then((response)=>{if(response.status==200){Alpine.store('ENV').setToken(response.data.token);Turbolinks.visit("/",{action:"replace"})}
if(response.status==400){this.validation=response.message}
if(response.status==409){this.validation=[]
Alpine.store('Toast').show('warning',response.message)}}).catch((error)=>console.log(error))},resetData(){this.data={email:'',password:'',}
this.dataRegister={username:'',email:'',password:'',confirm_password:''}
this.validation=[]}}))});;document.addEventListener('alpine:init',()=>{Alpine.data('Modal',()=>({showModal:!1,init(){console.log('initialized AdminProjects')},openModal(){this.showModal=!0},closeModal(){this.showModal=!1}}))});document.addEventListener('alpine:init',()=>{Alpine.data('AdminProjects',()=>({init(){console.log('init AdminProjects')},}))});document.addEventListener('alpine:init',()=>{Alpine.data('Projects',()=>({url:Alpine.store('ENV').URL+'/projects',token:Alpine.store('ENV').token,project_id:0,projectData:{id:0,name:'',description:'',start_date:'',end_date:'',priority:'low',budget:0,estimated_time:0,user_id:0,},test:null,validation:null,edit:!1,showConfirm:!1,showModalProject:!1,datosCargados:!1,init(){this.fetchProjects()},fetchProjects(){fetch(this.url,this.headerAPI('GET')).then(data=>data.json()).then((response)=>{this.projects=response
this.datosCargados=(response[0].id!=undefined)
if(this.datosCargados){Alpine.store('ProjectStore').projects=response}}).catch(responseError=>console.log(responseError))},addProject:function(){this.crud(this.url,this.headerAPI('POST',this.projectData),"Project created successfully")},updateProject(){this.crud(this.url+'/'+this.project_id,this.headerAPI('PUT',this.projectData),"Project updated successfully")},deleteProject(){this.crud(this.url+'/'+this.project_id,this.headerAPI('DELETE',null),"Project deleted successfully")},crud(url,header,mesage="OK"){fetch(url,header).then(response=>response.json()).then(response=>{console.log(response.status)
if(response.status==200){Alpine.store('Toast').show('success',mesage);this.resetData()
this.fetchProjects()}else if(response.status=400){this.validation=response.message}else if(response.status==404){Alpine.store('Toast').show('error',response.message)}}).catch(error=>console.log(error))},headerAPI(method,dataForm){return{headers:{'Content-type':'application/json',Authorization:`Bearer ${this.token}`},method:method,body:JSON.stringify(dataForm)}},resetData(){this.projectData={id:0,name:'',description:'',start_date:'',end_date:'',priority:'low',budget:0,estimated_time:0,user_id:0,}
this.showModalProject=!1
this.edit=!1}}))});